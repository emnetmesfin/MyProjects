/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scholar;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Dagi
 */
public class TableData extends javax.swing.JFrame {
Connection conni;
Statement ssti;
boolean foundv=false;
boolean found=false;
    /**
     * Creates new form TableData
     */
    public TableData() {
        initComponents();
        FormatLabel.setVisible(false);
        DisplayLabel1.setVisible(false);
        jTextArea1.setVisible(false);
        connect();
        delete.setVisible(false);
        assignPanel.setVisible(false);
    }
    public void connect(){
             try{
           conni=DriverManager.getConnection("jdbc:mysql://localhost:3306/scholarship","root","");
           if(conni != null){
               System.out.println("connection created");
           }    
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"connection can't be created");
        }
    }
     ArrayList<String> studt=new ArrayList<>();
 
        void showdata(){
        try {
        //jTextArea1.setText("i am a very good boy\n Nat really");
        //jLabel2.setVisible(true);
        ssti=conni.createStatement();
       
        ResultSet rs=ssti.executeQuery("select * from applicationform");
        while(rs.next()){
            studt.add(rs.getString("Student"));
            studt.add("         "+rs.getString("StudentLastName"));
            studt.add("-----"+rs.getString("Field"));
            studt.add("-----"+rs.getString("Education"));
            studt.add("-----"+rs.getString("University"));
            studt.add("-----"+rs.getString("Scores"));
            studt.add("-----"+rs.getString("Explanation"));
            //studt.add("-----"+rs.getString("Promoter"));
            //studt.add("-----"+rs.getString("Payment"));
            studt.add("-----"+rs.getString("Email")+"xx");
            System.out.println("One done");
            
            //studt.add();
                    //+rs.getString("StudentLastName")+rs.getString("StudentLastName")+rs.getString("Field")+rs.getString("University")+rs.getString("Scores")+rs.getString("Explanation")+rs.getString("Email"));

            
        }
            System.out.println("Studt    "+studt);
        
    } catch(Exception e){
            System.out.println("Exception unknown");
    }
        System.out.println("Works fine "+studt);
 String x=studt.toString().substring(1);
            x=x.substring(0, x.length()-1).replace(", ", "");
            
            System.out.println(studt);
            System.out.println(x);
            x=x.replace("xx", "\n");
            
            String sp="";
          
             System.out.println(x);
           jTextArea1.setText(x);
       }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        FormatLabel = new javax.swing.JLabel();
        DisplayLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        delete = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        delID = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        DisplayData = new javax.swing.JLabel();
        assignPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        SSID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        PID = new javax.swing.JTextField();
        SSFN = new javax.swing.JTextField();
        PNAME = new javax.swing.JTextField();
        AssignBtn = new javax.swing.JButton();
        ViewDBtn = new javax.swing.JButton();
        AssignMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("View applicants");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        FormatLabel.setText("StudentName       -----             Field       -----       Education       -----       University       -----          scores        -----       Explanation           -----        Email ");

        DisplayLabel1.setText("Displaying format");

        jButton2.setText("Add Employee");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Employee Data");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID of Employee to be Deleted");

        jButton4.setText("View Employee Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deleteLayout = new javax.swing.GroupLayout(delete);
        delete.setLayout(deleteLayout);
        deleteLayout.setHorizontalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteLayout.createSequentialGroup()
                .addGroup(deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteLayout.createSequentialGroup()
                        .addComponent(delID, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(DisplayData, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(deleteLayout.createSequentialGroup()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DeleteBtn)
                .addGap(84, 84, 84))
        );
        deleteLayout.setVerticalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(delID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DisplayData, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(DeleteBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Email of Self SponseredStudent ");

        jLabel3.setText("ID of T.Guide to be assigned");

        AssignBtn.setText("Assign");
        AssignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignBtnActionPerformed(evt);
            }
        });

        ViewDBtn.setText("View");
        ViewDBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewDBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout assignPanelLayout = new javax.swing.GroupLayout(assignPanel);
        assignPanel.setLayout(assignPanelLayout);
        assignPanelLayout.setHorizontalGroup(
            assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(assignPanelLayout.createSequentialGroup()
                        .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(SSID, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SSFN, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(assignPanelLayout.createSequentialGroup()
                                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(PID)
                                    .addComponent(PNAME, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, assignPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ViewDBtn)
                        .addGap(31, 31, 31)
                        .addComponent(AssignBtn)))
                .addContainerGap())
        );
        assignPanelLayout.setVerticalGroup(
            assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(assignPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SSFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(assignPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AssignBtn)
                    .addComponent(ViewDBtn)))
        );

        AssignMenu.setText("Assign Tour-Guide");
        AssignMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(assignPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FormatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DisplayLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(AssignMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1038, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(AssignMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(DisplayLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FormatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(assignPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
FormatLabel.setVisible(true);
        DisplayLabel1.setVisible(true);
        jTextArea1.setVisible(true);

        showdata();


        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        EmployeeForm ef=new EmployeeForm();
                ef.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        delete.setVisible(true);
        DisplayData.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed
        static boolean valid=true;
        static boolean checked=false;
        static String eid="empty";
        static String empid="empty";
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        checked=true;
        
    //boolean valid=true;
        try {
            ssti=conni.createStatement();
         eid=delID.getText();
        if(eid.length()!=6 ){
            JOptionPane.showMessageDialog(null, "Employee ID must be a six or above letter string or number");
            valid=false;
        }
        else if(eid.charAt(0)!='e'){
        JOptionPane.showMessageDialog(null, "Employee ID must start with ");
        valid=false;
        }
        DisplayData.setVisible(true);
        
        ResultSet rs=ssti.executeQuery("select * from employee");  
        String data=null;
        
        if(valid){
            System.out.println("Finding data of "+eid);
        while(rs.next()){
        if(eid.equals(rs.getString("EmployeeId"))){
            System.out.println("found it");
        empid=eid;
        valid=true;
        break;
        }
        }
        }
        if(valid && !"empty".equals(empid)){
            PreparedStatement ps=conni.prepareStatement("select * from employee");
            //ps.setString(1, empid);
            rs=ps.executeQuery();
            System.out.println("About to execute Query");
            //rs=ssti.executeQuery("select * from employee where EmployeeId= "+eid);
        while(rs.next()){
            
            System.out.println(rs.getString("EmployeeId"));
            System.out.println(empid);
            if(empid.equals(rs.getString("EmployeeId"))){
                System.out.println("Matched");
        data="Name---->"+rs.getString("EmployeName")+" "+rs.getString("EmployeeLastName")+"   ||   JobType---->"+rs.getString("Type");
                System.out.println(data);
        DisplayData.setVisible(true);
        DisplayData.setText(data);
            }
        }
        }
        
        
        
        // TODO add your handling code here:
    } catch (SQLException ex) {
        Logger.getLogger(TableData.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
    try {
        // TODO add your handling code here:
        boolean readytodelete=false;
        String name=null;
        String job=null;
        ssti=conni.createStatement();
        PreparedStatement ps=conni.prepareStatement("delete from employee where EmployeeId=?");
        PreparedStatement pss=conni.prepareStatement("select * from employee where EmployeeId=?");
        if(checked){
            if(empid.charAt(0)=='e'){
                ps.setString(1, empid);
                System.out.println("delete from employee where EmployeeId="+empid);
                
                pss.setString(1, empid);
                ResultSet rss;
                rss=pss.executeQuery();
                while(rss.next()){
                if(empid.equals(rss.getString("EmployeeId"))){
                System.out.println("delete from employee where EmployeeId="+empid);
                name=rss.getString("EmployeName");
                job=rss.getString("Type");
                System.out.println("Guy to be deleted "+rss.getString("EmployeName"));
                readytodelete=true;
                }
                }
                if(readytodelete){
                    int ch=JOptionPane.showConfirmDialog(null, "Are you sure deleting Name--"+name+" || JobType--"+job, "Delete", 2);
                    System.out.println(ch);
                    //JOptionPane.showConfirmDialog(rootPane, "Are you sure deleting Name--"+name+" JobType--"+job, eid, WIDTH, HEIGHT);
                if(ch==0){
                    ps.executeUpdate();
                }
                }
                
                
                }
            
        }
        else{
            String eid="empty";
            //boolean valid=true;
            try {
                ssti=conni.createStatement();
                eid=delID.getText();
                if(eid.length()!=6 ){
                    JOptionPane.showMessageDialog(null, "Employee ID must be a six or above letter string or number");
                    valid=false;
                }
                else if(eid.charAt(0)!='e'){
                    JOptionPane.showMessageDialog(null, "Employee ID must start with ");
                    valid=false;
                }
                DisplayData.setVisible(true);
                
                ResultSet rs=ssti.executeQuery("select * from employee");
                String data=null;
                String empid="empty";
                if(valid){
                    System.out.println("Finding data of "+eid);
                    while(rs.next()){
                        if(eid.equals(rs.getString("EmployeeId"))){
                            System.out.println("found it");
                            empid=eid;
                            valid=true;
                            break;
                        }
                    }
                }
                if(valid && !"empty".equals(empid)){
                    PreparedStatement psi=conni.prepareStatement("select * from employee");
                    //ps.setString(1, empid);
                    rs=psi.executeQuery();
                    System.out.println("About to execute Query");
                    //rs=ssti.executeQuery("select * from employee where EmployeeId= "+eid);
                    while(rs.next()){
                        
                        System.out.println(rs.getString("EmployeeId"));
                        System.out.println(empid);
                        if(empid.equals(rs.getString("EmployeeId"))){
                            System.out.println("Matched");
                            data="Name---->"+rs.getString("EmployeName")+" "+rs.getString("EmployeeLastName")+"   ||   JobType---->"+rs.getString("Type");
                            System.out.println(data);
                            DisplayData.setVisible(true);
                            DisplayData.setText(data);
                        }
                    }
                }
                
                
                
                // TODO add your handling code here:
            } catch (SQLException ex) {
                Logger.getLogger(TableData.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(TableData.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void AssignMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignMenuActionPerformed
        // TODO add your handling code here:
        assignPanel.setVisible(true);
        
    }//GEN-LAST:event_AssignMenuActionPerformed

    private void ViewDBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewDBtnActionPerformed
    try {
        // TODO add your handling code here:
        PreparedStatement pssv;
        pssv=conni.prepareStatement("select * from applicationform where Email=?");
        pssv.setString(1, SSID.getText());
        ResultSet rsv=pssv.executeQuery();
        
        String name="empty";
        while(rsv.next()){
            System.out.println("Finding student");
        if(rsv.getString("Email").equals(SSID.getText()) && rsv.getString("Payment").equals("Self spnosered")){
        name=rsv.getString("Student");
            //System.out.println(name);
            System.out.println("got it student");
        found=true;
        }
        else{
            System.out.println("wanted "+SSID.getText()+"   GOT "+rsv.getString("Email")+rsv.getString("Payment"));
        }
        }
        if(found){
        SSFN.setText(name);
        }
        else{
        SSFN.setText("Not found");
        }
        
        
        PreparedStatement pssvv;
        pssvv=conni.prepareStatement("select * from employee where EmployeeId=?");
        pssvv.setString(1, PID.getText());
        ResultSet rsvv=pssvv.executeQuery();
        
        String namev="empty";
        while(rsvv.next()){
            System.out.println("Finding Employee");
        if(rsvv.getString("EmployeeId").equals(PID.getText()) && rsvv.getString("Type").equals("Tour Guide")){
            System.out.println("got it employee");
        namev=rsvv.getString("EmployeName");
        System.out.println(namev);
        foundv=true;
        }
        }
        if(foundv){
        PNAME.setText(namev);
        }
        else{
        PNAME.setText("Not found");
        }
        
        
        
        
        
        
        
        
        
    } catch (SQLException ex) {
        Logger.getLogger(TableData.class.getName()).log(Level.SEVERE, null, ex);
    }
       
        
        
        
    }//GEN-LAST:event_ViewDBtnActionPerformed

    private void AssignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignBtnActionPerformed
    try {
        // TODO add your handling code here:
        PreparedStatement pssvvv;
        pssvvv=conni.prepareStatement("update applicationform set TourGuideID=? where Email =?");
        pssvvv.setString(1, PID.getText());
        System.out.println("About to");
        pssvvv.setString(2, SSID.getText());
        System.out.println("What");
        
        String namev="empty";
        pssvvv.executeUpdate();
        System.out.println("Did i");
        JOptionPane.showMessageDialog(null, "Successfully Assigned");
    } catch (SQLException ex) {
        Logger.getLogger(TableData.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        
    }//GEN-LAST:event_AssignBtnActionPerformed
String met(){
    System.out.println("right herre");
    return "Done";
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignBtn;
    private javax.swing.JButton AssignMenu;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel DisplayData;
    private javax.swing.JLabel DisplayLabel1;
    private javax.swing.JLabel FormatLabel;
    private javax.swing.JTextField PID;
    private javax.swing.JTextField PNAME;
    private javax.swing.JTextField SSFN;
    private javax.swing.JTextField SSID;
    private javax.swing.JButton ViewDBtn;
    private javax.swing.JPanel assignPanel;
    private javax.swing.JTextField delID;
    private javax.swing.JPanel delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
